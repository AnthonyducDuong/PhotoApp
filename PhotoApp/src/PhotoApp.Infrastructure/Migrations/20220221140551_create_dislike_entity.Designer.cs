// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotoApp.Infrastructure.Contexts;

#nullable disable

namespace PhotoApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220221140551_create_dislike_entity")]
    partial class create_dislike_entity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.DislikeEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "PhotoId");

                    b.HasIndex("PhotoId");

                    b.ToTable("Dislike", (string)null);
                });

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.LikeEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "PhotoId");

                    b.HasIndex("PhotoId");

                    b.ToTable("Like", (string)null);
                });

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.PhotoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photo", (string)null);
                });

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.DislikeEntity", b =>
                {
                    b.HasOne("PhotoApp.Infrastructure.Entities.PhotoEntity", "PhotoEntity")
                        .WithMany("dislikeEntities")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Dislike_Photo");

                    b.HasOne("PhotoApp.Infrastructure.Entities.UserEntity", "UserEntity")
                        .WithMany("dislikeEntities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Dislike_User");

                    b.Navigation("PhotoEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.LikeEntity", b =>
                {
                    b.HasOne("PhotoApp.Infrastructure.Entities.PhotoEntity", "PhotoEntity")
                        .WithMany("likeEntities")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Like_Photo");

                    b.HasOne("PhotoApp.Infrastructure.Entities.UserEntity", "UserEntity")
                        .WithMany("likeEntities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("Fk_Like_User");

                    b.Navigation("PhotoEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.PhotoEntity", b =>
                {
                    b.HasOne("PhotoApp.Infrastructure.Entities.UserEntity", "userEntity")
                        .WithMany("photoEntities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_Photo_User");

                    b.Navigation("userEntity");
                });

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.UserEntity", b =>
                {
                    b.HasOne("PhotoApp.Infrastructure.Entities.RoleEntity", "RoleEntity")
                        .WithMany("userEntities")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_User_Role");

                    b.Navigation("RoleEntity");
                });

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.PhotoEntity", b =>
                {
                    b.Navigation("dislikeEntities");

                    b.Navigation("likeEntities");
                });

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.RoleEntity", b =>
                {
                    b.Navigation("userEntities");
                });

            modelBuilder.Entity("PhotoApp.Infrastructure.Entities.UserEntity", b =>
                {
                    b.Navigation("dislikeEntities");

                    b.Navigation("likeEntities");

                    b.Navigation("photoEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
